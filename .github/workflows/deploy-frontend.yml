name: Deploy Frontend to S3

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build for production
      run: |
        echo "üèóÔ∏è Building for production with API URL: https://104.154.91.216:3443/api"
        VITE_API_URL=https://104.154.91.216:3443/api npm run build
      env:
        NODE_ENV: production

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Deploy to S3
      run: |
        echo "üöÄ Deploying to S3 bucket: ${{ secrets.S3_BUCKET_NAME }}"
        
        # Sync build files to S3
        aws s3 sync dist/ s3://${{ secrets.S3_BUCKET_NAME }} \
          --delete \
          --exact-timestamps \
          --cache-control "public, max-age=31536000, immutable" \
          --exclude "*.html"
        
        # Upload HTML files with no-cache
        aws s3 sync dist/ s3://${{ secrets.S3_BUCKET_NAME }} \
          --exact-timestamps \
          --cache-control "public, max-age=0, must-revalidate" \
          --content-type "text/html" \
          --include "*.html"
        
        echo "‚úÖ Successfully deployed to S3"

    - name: Invalidate CloudFront
      run: |
        if [ ! -z "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
          echo "üîÑ Invalidating CloudFront distribution: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
          echo "‚úÖ CloudFront cache invalidated"
          echo "üåê Website will be live at: https://spytech.am"
        else
          echo "‚ÑπÔ∏è  No CloudFront distribution ID provided, skipping cache invalidation"
          echo "üåê Website will be live directly from S3"
        fi
